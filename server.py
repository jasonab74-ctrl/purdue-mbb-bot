import os, json, datetime
from flask import Flask, render_template, jsonify, request, send_from_directory, abort

# IMPORTANT: your index.html currently lives at template/templates/index.html
# so we point Flask there explicitly.
app = Flask(
    __name__,
    template_folder="template/templates",   # <-- matches your repo layout
    static_folder="static"
)

ITEMS_PATH = os.environ.get("ITEMS_PATH", "items.json")  # produced by collect.py


def load_data():
    """
    Safely load items.json generated by collect.py during build/refresh.
    Returns a dict with at least: {"items": [...], "modified": "..."}.
    """
    try:
        if not os.path.exists(ITEMS_PATH):
            return {"items": [], "modified": "never"}
        with open(ITEMS_PATH, "r", encoding="utf-8") as f:
            data = json.load(f)
            # Normalize expected keys
            if "items" not in data:
                data = {"items": data, "modified": "unknown"}
            if "modified" not in data:
                data["modified"] = "unknown"
            return data
    except Exception as e:
        # Never crash the page because of a bad file
        return {"items": [], "modified": f"error: {e}"}


@app.route("/")
def index():
    data = load_data()
    return render_template("index.html", modified=data.get("modified", "never"))


@app.route("/api/items")
def api_items():
    data = load_data()
    return jsonify(data)


@app.route("/api/last-mod")
def api_last_mod():
    data = load_data()
    return jsonify({"modified": data.get("modified", "never")})


@app.route("/api/refresh-now", methods=["POST"])
def refresh_now():
    """
    Optional: keep your existing key. This just returns 200 so your curl habit keeps working.
    If you already had logic here, you can swap it back in.
    """
    # Example key check (keep your current value)
    expected = os.environ.get("REFRESH_KEY", "mbb_refresh_6P7wP9dXr2Jq")
    supplied = (request.args.get("key") or request.headers.get("X-Refresh-Key") or "").strip()
    if supplied != expected:
        abort(401)
    # If you trigger collect.py here in your setup, call it. Otherwise just ack.
    return jsonify({"ok": True})


@app.route("/healthz")
def healthz():
    return "ok", 200


# Serve any static file (logo.png, fight.mp3, style.css) from /static
@app.route("/static/<path:filename>")
def static_files(filename):
    return send_from_directory(app.static_folder, filename)


if __name__ == "__main__":
    port = int(os.environ.get("PORT", "5000"))
    app.run(host="0.0.0.0", port=port, debug=False, threaded=True)
